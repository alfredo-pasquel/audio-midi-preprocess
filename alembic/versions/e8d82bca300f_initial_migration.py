"""Initial migration

Revision ID: e8d82bca300f
Revises: 
Create Date: 2025-02-07 17:42:14.808260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e8d82bca300f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cue_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cue_path', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cue_path')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audio_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('canonical_name', sa.String(), nullable=True),
    sa.Column('instrument_category', sa.String(), nullable=True),
    sa.Column('cue_group_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cue_group_id'], ['cue_groups.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_table('midi_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('tempo_map', sa.Text(), nullable=True),
    sa.Column('time_signature_map', sa.Text(), nullable=True),
    sa.Column('ticks_per_beat', sa.Integer(), nullable=True),
    sa.Column('cue_group_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cue_group_id'], ['cue_groups.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_table('audio_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('audio_file_id', sa.Integer(), nullable=True),
    sa.Column('feature_type', sa.String(), nullable=True),
    sa.Column('feature_data', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['audio_file_id'], ['audio_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_mixes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('midi_file_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('feature_type', sa.String(), nullable=True),
    sa.Column('feature_data', sa.LargeBinary(), nullable=True),
    sa.Column('cue_group_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cue_group_id'], ['cue_groups.id'], ),
    sa.ForeignKeyConstraint(['midi_file_id'], ['midi_files.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path'),
    sa.UniqueConstraint('midi_file_id')
    )
    op.create_table('midi_tracks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('midi_file_id', sa.Integer(), nullable=True),
    sa.Column('track_index', sa.Integer(), nullable=True),
    sa.Column('track_name', sa.String(), nullable=True),
    sa.Column('instrument_category', sa.String(), nullable=True),
    sa.Column('assigned_audio_file_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_audio_file_id'], ['audio_files.id'], ),
    sa.ForeignKeyConstraint(['midi_file_id'], ['midi_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('midi_cc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('midi_track_id', sa.Integer(), nullable=True),
    sa.Column('channel', sa.Integer(), nullable=True),
    sa.Column('cc_number', sa.Integer(), nullable=True),
    sa.Column('cc_value', sa.Integer(), nullable=True),
    sa.Column('tick', sa.Integer(), nullable=True),
    sa.Column('time', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['midi_track_id'], ['midi_tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('midi_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('midi_track_id', sa.Integer(), nullable=True),
    sa.Column('channel', sa.Integer(), nullable=True),
    sa.Column('note', sa.Integer(), nullable=True),
    sa.Column('velocity', sa.Integer(), nullable=True),
    sa.Column('start_tick', sa.Integer(), nullable=True),
    sa.Column('end_tick', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Float(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['midi_track_id'], ['midi_tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('midi_program_changes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('midi_track_id', sa.Integer(), nullable=True),
    sa.Column('channel', sa.Integer(), nullable=True),
    sa.Column('program', sa.Integer(), nullable=True),
    sa.Column('tick', sa.Integer(), nullable=True),
    sa.Column('time', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['midi_track_id'], ['midi_tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('midi_program_changes')
    op.drop_table('midi_notes')
    op.drop_table('midi_cc')
    op.drop_table('midi_tracks')
    op.drop_table('final_mixes')
    op.drop_table('audio_features')
    op.drop_table('midi_files')
    op.drop_table('audio_files')
    op.drop_table('projects')
    op.drop_table('cue_groups')
    # ### end Alembic commands ###
